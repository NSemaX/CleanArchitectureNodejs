{
  "openapi": "3.0.1",
  "info": {
    "title": "NSShop API",
    "description": "This is a Clean Architercture applied Node.js - Typescript API",
    "contact": {
      "name": "Nagihan Sema KUDU",
      "url": "http://www.semakudu.com/",
      "email": "sema@semakudu.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get all customers",
        "description": "Gets all customers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create customer",
        "description": "Creates a customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update customer",
        "description": "Updates a customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    },
    "/api/customers/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer by Id",
        "description": "Gets a customer according to given customerId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Related customerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete customer",
        "description": "Deletes a customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    },
    "/api/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get all orders",
        "description": "Gets all orders",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create order",
        "description": "Creates an order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Update order",
        "description": "Updates an order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get an order by Id",
        "description": "Gets order according to given orderId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Related orderId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete order",
        "description": "Deletes an order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/orders/customers/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get orders by a customerId",
        "description": "Gets orders according to given customerId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Related customerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Orders not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products",
        "description": "Gets all products",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create product",
        "description": "Creates an product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update product",
        "description": "Updates an product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by Id",
        "description": "Gets a product according to given productId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Related productId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete product",
        "description": "Deletes a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CustomerCreateRequest": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Surname": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Surname": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "integer",
            "format": "int32"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "UpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CustomerUpdateRequest": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Surname": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderCreateRequest": {
        "type": "object",
        "properties": {
          "Order": {
            "$ref": "#/components/schemas/OrderCreateRequestDTO"
          },
          "OrderDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderCreateRequestDetailDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderCreateRequestDetailDTO": {
        "type": "object",
        "properties": {
          "ProductId": {
            "type": "integer",
            "format": "int32"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderCreateRequestDTO": {
        "type": "object",
        "properties": {
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "PurchasedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OrderDetailResponseDTO": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "OrderId": {
            "type": "integer",
            "format": "int32"
          },
          "Product": {
            "$ref": "#/components/schemas/ProductResponse"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "UpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OrderResponse": {
        "type": "object",
        "properties": {
          "Order": {
            "$ref": "#/components/schemas/OrderResponseDTO"
          },
          "OrderDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDetailResponseDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderResponseDTO": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "$ref": "#/components/schemas/CustomerResponse"
          },
          "TotalAmount": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "type": "integer",
            "format": "int32"
          },
          "PurchasedDate": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "UpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OrderUpdateRequest": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "TotalAmount": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "type": "integer",
            "format": "int32"
          },
          "PurchasedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProductCreateRequest": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "UpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateRequest": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    }
  }
}